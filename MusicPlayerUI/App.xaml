<Application x:Class="MusicPlayerUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MusicPlayerUI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="TransparentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom Style for ContextMenu -->
        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border Background="#F0F0F0" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="5">
                            <StackPanel IsItemsHost="True" Margin="4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Composite Collection for Playlists -->
        <!--<CompositeCollection x:Key="CompositePlaylists">
            <CollectionContainer Collection="{Binding Source={x:Static Application.Current}, Path=Playlists}"/>
            <MenuItem Header="+ Add New Playlist" Command="{Binding Source={x:Static Application.Current}, Path=AddToPlaylistCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Header}"/>
        </CompositeCollection>-->

        <local:MultiParameterConverter x:Key="MultiParameterConverter" />

        <!-- Global DataGridRow Style -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Play" Command="{Binding Source={x:Static Application.Current}, Path=PlayCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Add to Playlist">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding PlaylistName}"/>
                                    <Setter Property="Command" Value="{Binding Source={x:Static Application.Current}, Path=AddToPlaylistCommand}"/>
                                    <Setter Property="CommandParameter">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource MultiParameterConverter}">
                                                <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource AncestorType=ContextMenu}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                            <MenuItem.ItemsSource>
                                <CompositeCollection>
                                    <CollectionContainer Collection="{Binding Source={x:Static Application.Current}, Path=Playlists}"/>
                                    <MenuItem Header="+ Add New Playlist" Command="{Binding Source={x:Static Application.Current}, Path=AddToPlaylistCommand}">
                                        <MenuItem.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiParameterConverter}">
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </MenuItem.CommandParameter>
                                    </MenuItem>
                                </CompositeCollection>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                        <MenuItem Header="Remove" Command="{Binding Source={x:Static Application.Current}, Path=RemoveCommand}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                    <Setter Property="Background" Value="LightGreen" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <!-- Global DataGridCell Style - Remove the default blue selection color in data grid -->
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground"
                            Value="{DynamicResource
                                   {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#ccc"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                    <Setter Property="Background" Value="LightGreen" />
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
